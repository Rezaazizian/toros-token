name: anchor-deploy-devnet

on:
  workflow_dispatch:
    inputs:
      cluster:
        description: "Solana cluster"
        required: true
        default: devnet
      program:
        description: "Program to deploy (anchor workspace member)"
        required: true
        default: trs_staking

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      ANCHOR_WALLET_JSON: ${{ secrets.ANCHOR_WALLET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libudev-dev libusb-1.0-0-dev build-essential

      - name: Install Solana CLI
        run: |
          set -e
          for i in {1..6}; do
            echo "Attempt $i to install Solana CLI"
            if curl -sSfL https://release.solana.com/stable/install | sh -s - -y; then
              echo "Solana CLI installed"
              break
            fi
            echo "Install failed, retrying in 5s..."
            sleep 5
          done
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          SOLANA_BIN_DIR="$HOME/.local/share/solana/install/active_release/bin"
          "$SOLANA_BIN_DIR/solana" --version || true
          ls -la "$SOLANA_BIN_DIR" || true

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal
          override: true

      - name: Install Anchor CLI
        run: |
          cargo install --git https://github.com/coral-xyz/anchor anchor-cli --locked

      - name: Configure wallet and RPC
        run: |
          set -e
          SOLANA_BIN_DIR="$HOME/.local/share/solana/install/active_release/bin"
          export PATH="$SOLANA_BIN_DIR:$PATH"
          which solana || true
          ls -la "$SOLANA_BIN_DIR" || true
          mkdir -p "$HOME/.config/solana"
          if [ -z "$ANCHOR_WALLET_JSON" ]; then echo "Missing secret ANCHOR_WALLET" && exit 1; fi
          echo "$ANCHOR_WALLET_JSON" > "$HOME/.config/solana/id.json"
          chmod 600 "$HOME/.config/solana/id.json"
          RPC_URL_INPUT=${{ secrets.SOLANA_RPC_URL }}
          if [ -z "$RPC_URL_INPUT" ]; then RPC_URL_INPUT="https://api.devnet.solana.com"; fi
          "$SOLANA_BIN_DIR/solana" config set --url "$RPC_URL_INPUT" --keypair "$HOME/.config/solana/id.json"
          "$SOLANA_BIN_DIR/solana-keygen" pubkey "$HOME/.config/solana/id.json"

      - name: Build workspace
        working-directory: toros-solana
        run: anchor build

      - name: Deploy program
        working-directory: toros-solana
        env:
          ANCHOR_WALLET: ${{ env.HOME }}/.config/solana/id.json
        run: anchor deploy -p "${{ github.event.inputs.program }}" --provider.cluster "${{ github.event.inputs.cluster }}"

      - name: Upload deploy artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: anchor-target
          path: toros-solana/target/deploy/**